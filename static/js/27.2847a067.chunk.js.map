{"version":3,"file":"static/js/27.2847a067.chunk.js","mappings":"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","sources":["components/ButtonBack/ButtonBack.jsx","services/api.js","components/Card/Card.jsx","components/CardList/CardList.jsx","pages/Tweets.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonWrapper = styled.button`\n  margin: 20px auto;\n  padding: 8px 16px;\n\n  font-weight: 600;\n  border-radius: 10px;\n  border: none;\n\n  background-color: green;\n  color: blue;\n  transition: transform 250ms linear;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: yellow;\n    transform: scale(1.2);\n    cursor: pointer;\n  }\n`;\n\nconst LinkBack = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  font-size: 16px;\n`;\n\nexport default function BackButton() {\n  const location = useLocation();\n\n  return (\n    <ButtonWrapper type=\"button\">\n      <LinkBack to={location.state?.from ?? '/'}>To Home</LinkBack>\n    </ButtonWrapper>\n  );\n}\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst agent = axios.create({\n  baseURL: 'https://64466a2e0431e885f0114f85.mockapi.io/users',\n});\n\nexport const fetchUsers = async () => {\n  try {\n    const response = await agent.get();\n\n    return response;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Sorry, nothing to display for your request: ',\n      error.message\n    );\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport logo from './user_logo.png';\nimport backgroungImage from './user_background.png';\n\nconst AvatarWrapper = styled.div`\n  position: relative;\n  height: 222px;\n  padding: 28px 36px 18px 36px;\n\n  ::after {\n    content: ' ';\n    display: inline-block;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    height: 8px;\n    width: 100%;\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nconst BackgroundImage = styled.div`\n  height: 168px;\n  background-image: url(${backgroungImage});\n  background-repeat: no-repeat;\n  background-size: contain;\n`;\n\nconst LogoImage = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  width: 76px;\n  height: 22px;\n`;\n\nconst Avatar = styled.div`\n  position: absolute;\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  bottom: -36px;\n  left: 150px;\n  background-color: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n`;\n\nconst AvatarImage = styled.img`\n  background-color: #ebd8ff;\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\n\nconst ContentWrapper = styled.div`\n  padding: 62px 83px 36px;\n`;\n\nconst TextInsert = styled.p`\n  font-family: 'Medium';\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n\n  &:not(:last-of-type) {\n    margin-bottom: 16px;\n  }\n  &:last-of-type {\n    margin-bottom: 26px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 196px;\n  height: 50px;\n  padding: 14px 28px;\n  font-family: 'SemiBold';\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  color: #373737;\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n\n  &.active {\n    background-color: #5cd3a8;\n  }\n`;\n\nexport default function Card({ id, tweets, avatar, initialFollowers }) {\n  const [isFollow, setIsFollow] = useState(false);\n  const [followCount, setFollowCount] = useState(initialFollowers);\n\n  useEffect(() => {\n    localStorage.setItem(`${id}`, followCount.toString());\n  }, [followCount, id]);\n\n  const onButtonClick = async () => {\n    setIsFollow(!isFollow);\n\n    if (followCount === initialFollowers) {\n      setFollowCount(prevState => prevState + 1);\n    } else {\n      setFollowCount(prevState => prevState - 1);\n    }\n\n    localStorage.setItem(`${id}`, !isFollow);\n  };\n\n  const getFollowers = followers => {\n    if (followers > 999) {\n      return (\n        followers.toString().slice(0, -3) + ',' + followers.toString().slice(-3)\n      );\n    }\n\n    return followers;\n  };\n\n  const getButtonStatus = followers =>\n    followers === initialFollowers ? 'follow' : 'following';\n\n  const counter = getButtonStatus(followCount);\n\n  return (\n    <>\n      <AvatarWrapper>\n        <BackgroundImage />\n        <LogoImage src={logo} alt=\"logo\" />\n        <Avatar>\n          <AvatarImage\n            src={avatar}\n            alt=\"avatar\"\n            width=\"62px\"\n            height=\"62px\"\n          ></AvatarImage>\n        </Avatar>\n      </AvatarWrapper>\n      <ContentWrapper>\n        <TextInsert>{tweets} tweets</TextInsert>\n        <TextInsert>{getFollowers(followCount)} followers</TextInsert>\n        <Button\n          onClick={onButtonClick}\n          className={counter === 'follow' ? '' : 'active'}\n        >\n          {counter}\n        </Button>\n      </ContentWrapper>\n    </>\n  );\n}\n\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tweets: PropTypes.number.isRequired,\n  initialFollowers: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Card from 'components/Card/Card';\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 48px;\n`;\n\nconst ListItem = styled.li`\n  width: 380px;\n  text-align: center;\n  text-transform: uppercase;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport default function CardList({ users }) {\n  return (\n    <List>\n      {users &&\n        users.map(({ id, avatar, tweets, followers }) => (\n          <ListItem key={id}>\n            <Card\n              id={id}\n              tweets={tweets}\n              initialFollowers={followers}\n              avatar={avatar}\n            />\n          </ListItem>\n        ))}\n    </List>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\nimport styled from 'styled-components';\n\nimport { fetchUsers } from 'services/api';\n\nimport CardList from 'components/CardList/CardList';\nimport BackButton from 'components/ButtonBack/ButtonBack';\n\nconst Container = styled.div`\n  padding: 30px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default function Tweets() {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function update() {\n      setIsLoading(true);\n\n      try {\n        const response = await fetchUsers();\n        setUsers(prevUsers => [...prevUsers, ...response.data]);\n\n        setIsLoading(false);\n      } catch (error) {\n        return Notiflix.Notify.failure('Something went wrong');\n      }\n    }\n\n    update();\n  }, []);\n\n  return (\n    <Container>\n      <BackButton />\n\n      {isLoading && <p>Loading...</p>}\n\n      <CardList users={users} />\n    </Container>\n  );\n}\n"],"names":["ButtonWrapper","styled","LinkBack","Link","BackButton","location","useLocation","type","to","state","from","agent","axios","baseURL","fetchUsers","get","response","Notiflix","message","AvatarWrapper","BackgroundImage","backgroungImage","LogoImage","Avatar","AvatarImage","ContentWrapper","TextInsert","Button","Card","id","tweets","avatar","initialFollowers","useState","isFollow","setIsFollow","followCount","setFollowCount","useEffect","localStorage","setItem","toString","onButtonClick","prevState","counter","src","alt","width","height","followers","slice","getFollowers","onClick","className","List","ListItem","CardList","users","map","Container","Tweets","setUsers","isLoading","setIsLoading","prevUsers","data","update"],"sourceRoot":""}